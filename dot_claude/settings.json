{
  "statusLine": {
    "type": "command",
    "command": "input=$(cat); current_dir=$(echo \"$input\" | jq -r '.workspace.current_dir'); echo -n \"📁 $(basename \"$current_dir\")\"; if git -C \"$current_dir\" rev-parse --git-dir >/dev/null 2>&1; then branch=$(git -C \"$current_dir\" branch --show-current 2>/dev/null || echo 'detached'); status=$(git -C \"$current_dir\" status --porcelain 2>/dev/null); if [ -n \"$status\" ]; then echo \" 🌿 $branch ⚡\"; else echo \" 🌿 $branch ✅\"; fi; else echo \"\"; fi"
  },
  "permissions": {
    "allow": [],
    "deny": [
      "Bash(curl:*)",
      "Read(./.env)",
      "Read(./.env.*)",
      "Read(./secrets/**)"
    ]
  },
  "env": {},
  "mcpServers": {
    "filesystem": {
        "command": "npx",
        "args": [
        "-y",
        "@modelcontextprotocol/server-filesystem",
        "/Users/dev/workspace"
        ],
        "env": {},
        "working_directory": null
    },
    "context7": {
        "command": "npx",
        "args": [
        "-y",
        "@upstash/context7-mcp"
        ],
        "env": {
        "DEFAULT_MINIMUM_TOKENS": "6000"
        },
        "working_directory": null
    },
    "fetch": {
        "command": "uvx",
        "args": [
        "mcp-server-fetch"
        ],
        "env": {},
        "working_directory": null
    },
    "playwright": {
        "command": "npx",
        "args": [
        "@playwright/mcp@latest"
        ],
        "env": {},
        "working_directory": null
    },
    "sequential-thinking": {
        "command": "npx",
        "args": [
            "-y",
            "@modelcontextprotocol/server-sequential-thinking"
        ],
        "env": {},
        "working_directory": null
    },
    "nixos": {
        "command": "uvx",
        "args": [
        "mcp-nixos"
        ],
        "env": {},
        "working_directory": null
    },
    "everything": {
        "command": "npx",
        "args": [
        "-y",
        "@modelcontextprotocol/server-everything"
        ],
        "env": {},
        "working_directory": null
    }
  }
}
