#!/bin/bash

# Nix package installation - minimal start with ranger
# Designed to gradually replace Homebrew packages

# Check if this is an extra user
if [ "{{ .extraUser }}" == "true" ]; then
  echo "Already installed by main user, skipping Nix packages."
  exit 0
fi

echo "Installing Nix packages..."

# Source Nix environment
if [ -e '/nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh' ]; then
  . '/nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh'
fi

# Check if Nix is available
if ! command -v nix-env >/dev/null 2>&1; then
  echo "❌ Nix not found. Please run prerequisites script first."
  exit 1
fi

echo "✅ Nix is available"

export NIXPKGS_ALLOW_UNFREE=1

NIX_PACKAGES=(
  "gemini-cli"
  "aspell"
  "_1password-cli"
  "age"
  "terraform"
  "kubernetes-helm"
  "curl"
  "borgmatic"
  "borgbackup"
  "luarocks"
  "mas"
  "cmake"
  "tree-sitter"
  "gcc"
  "gnumake"
  "jankyborders"
  "ranger"      # File manager
  "atuin"
  "bat"         # Better cat
  "btop"        # Better htop
  "eza"         # Better ls
  "fd"          # Better find
  "fzf"         # Fuzzy finder
  "gh"
  "git"         # Version control
  "lazygit"
  "neofetch"
  "neovim"      # Editor
  "ripgrep"     # Better grep
  "starship"
  "pay-respects"
  "tmux"
  "zoxide"
  "wget"        # Downloader
  "age"
  "bandwhich"
  "coreutils-prefixed"
  "chafa"
  "chezmoi"
  "cmatrix"
  "ctop"
  "direnv"
  "dockutil"
  "duf"
  "glances"
  "hcloud"
  "hey"
  "htop"
  "iftop"
  "imagemagick"
  "k9s"
  "k6"
  "kind"
  "kubectl"
  "kubectx"
  "lazydocker"
  "linkerd"
  "lsof"
  "ncdu"
  "nmap"
  "popeye"
  "pngpaste"
  "pnpm"
  "pgcli"
  "ollama"
  "slides"
  "speedtest-cli"
  "stern"
  "shellcheck"
  "tldr"
  "tmuxinator"
  "trufflehog"
  "gtrash"
  "tree"
  "uv"
  "vips"
  "watch"
  "nixfmt"
  "python3"
  "pipenv"
  "python3Packages.isort"
  "python3Packages.pytest"
  "python3Packages.ptpython"
  "discount" # Markdown
  "ruff"
  "cyberduck"

  "stylelint"
  "nodejs"
  "nodePackages.js-beautify"
  "nodePackages.cspell"
{{ if .podmanEnabled }}
  "podman"
  "podman-compose"
  "kind"
{{ end }}
{{ if .dockerEnabled }}
  "docker"
  "docker-compose"
{{ end }}
{{ if .goEnabled }}
  "go"
  "gomodifytags"
  "gotests"
  "gore"
{{ end }}
{{ if .rustEnabled }}
  "rustc"
  "rustup"
{{ end }}
)

for package in "${NIX_PACKAGES[@]}"; do
  if nix-env -iA "nixpkgs.$package" 2>/dev/null; then
    echo "✅ ** ${package} ** installed via Nix"
    if command -v brew &>/dev/null; then
      if brew list --formula | grep -q "^$package$"; then
          echo "  🗑️ Uninstalling ** ${package} ** from Homebrew..."
          brew uninstall "$package"
          echo ""
      fi
    fi
  else
    echo "❌ Failed to install ** ${package} ** via Nix (will use Homebrew fallback)"
    echo ""
  fi
done

echo ""
echo "System generations (for rollback):"
nix-env --list-generations | tail -5
-list-generations | tail -5
