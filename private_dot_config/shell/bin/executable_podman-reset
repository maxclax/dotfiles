# vim: filetype=sh
#!/bin/bash
set -e

# Help function
show_help() {
	cat <<EOF
Usage: podman-reset [OPTIONS]

Reset podman environment completely, removing all containers, images, volumes, and machine configuration.

Options:
    -f, --force         Skip confirmation prompt
    -h, --help          Show this help message

WARNING: This will remove all containers, images, volumes, and podman machine configuration!
EOF
}

# Parse command line arguments
FORCE=0
while [[ $# -gt 0 ]]; do
	case $1 in
	-f | --force)
		FORCE=1
		shift
		;;
	-h | --help)
		show_help
		exit 0
		;;
	*)
		echo "Unknown option: $1"
		show_help
		exit 1
		;;
	esac
done

# Confirm unless force flag is used
if [ $FORCE -eq 0 ]; then
	echo "WARNING: This will remove all containers, images, volumes, and podman machine configuration!"
	read -p "Are you sure you want to continue? (y/N) " -n 1 -r
	echo
	if [[ ! $REPLY =~ ^[Yy]$ ]]; then
		echo "Operation cancelled."
		exit 1
	fi
fi

# Check if podman is installed
if ! command -v podman >/dev/null 2>&1; then
	echo "Error: Podman is not installed."
	exit 1
fi

echo "Removing Docker compatibility layer..."
rm -rf ~/.docker

echo "Pruning Podman system..."
podman system prune --all --volumes --force

echo "Stopping Podman machine..."
if podman machine list | grep -q "Currently running"; then
	podman machine stop
fi

echo "Removing Podman machine..."
if podman machine list | grep -q "podman-machine-default"; then
	podman machine rm -f
fi

# Only uninstall Podman Mac helper on macOS (if available)
if [[ "$OSTYPE" == "darwin"* ]]; then
	echo "Checking for Podman Mac helper..."
	if command -v podman-mac-helper >/dev/null 2>&1; then
		echo "Uninstalling Podman Mac helper..."
		sudo podman-mac-helper uninstall
	fi
fi

echo "Podman environment has been reset successfully!"
