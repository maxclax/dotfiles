# -*- mode: nix; -*-
{
  description = "Home Manager configuration";

  inputs = {
    nixpkgs.url = "github:NixOS/nixpkgs/nixpkgs-unstable";

    home-manager = {
      url = "github:nix-community/home-manager";
      inputs.nixpkgs.follows = "nixpkgs";
    };

{{- if eq .chezmoi.os "linux" }}
    zen-browser = {
      url = "github:0xc000022070/zen-browser-flake";
      inputs.nixpkgs.follows = "nixpkgs";
    };
{{- end }}

{{- if and (eq .chezmoi.os "darwin") (not .extraUser) }}
    nix-darwin = {
      url = "github:LnL7/nix-darwin";
      inputs.nixpkgs.follows = "nixpkgs";
    };
{{- end }}
  };

  outputs = { nixpkgs, home-manager{{- if eq .chezmoi.os "linux" }}, zen-browser{{- end }}{{- if and (eq .chezmoi.os "darwin") (not .extraUser) }}, nix-darwin{{- end }}, ... }:
    let
      system = "{{- if eq .chezmoi.arch "arm64" }}aarch64{{- else }}{{ .chezmoi.arch }}{{- end }}-{{ .chezmoi.os }}";
      pkgs = nixpkgs.legacyPackages.${system};
    in {
{{- if and (eq .chezmoi.os "darwin") (not .extraUser) }}
      # nix-darwin configuration for macOS (only for main user)
      darwinConfigurations."{{ .chezmoi.hostname }}" = nix-darwin.lib.darwinSystem {
        inherit system;
        modules = [
          ./darwin-configuration.nix
          home-manager.darwinModules.home-manager
          {
            home-manager.useGlobalPkgs = true;
            home-manager.useUserPackages = true;
            home-manager.users."{{ .chezmoi.username }}" = import ./home.nix;
            home-manager.extraSpecialArgs = {
              inherit system;
              chezmoi = {
                os = "{{ .chezmoi.os }}";
                arch = "{{ .chezmoi.arch }}";
                hostname = "{{ .chezmoi.hostname }}";
                username = "{{ .chezmoi.username }}";
                homeDir = "{{ .chezmoi.homeDir }}";
              };
            };
          }
        ];
      };
{{- else }}
      # Home Manager only configuration for Linux
      homeConfigurations."{{ .chezmoi.username }}" = home-manager.lib.homeManagerConfiguration {
        inherit pkgs;

        modules = [
          ./home.nix
{{- if eq .chezmoi.os "linux" }}
          zen-browser.homeManagerModules.default
{{- end }}
        ];

        extraSpecialArgs = {
          inherit system;
{{- if eq .chezmoi.os "linux" }}
          zen-browser = zen-browser;
{{- end }}
          chezmoi = {
            os = "{{ .chezmoi.os }}";
            arch = "{{ .chezmoi.arch }}";
            hostname = "{{ .chezmoi.hostname }}";
            username = "{{ .chezmoi.username }}";
            homeDir = "{{ .chezmoi.homeDir }}";
          };
        };
      };
{{- end }}
    };
}
